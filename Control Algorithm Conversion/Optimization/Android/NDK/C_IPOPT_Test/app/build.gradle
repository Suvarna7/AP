apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "24.0.1"
    defaultConfig {
        applicationId "com.example.zachariemaloney.c_ipopt_test"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions"
                cppFlags += "-I" + file("main/cpp/Common/").absolutePath
                //generated using
                // find app/src/main/cpp/*/ -type d | sed 's|app/src/|cppFlags += "-I${file("|' | sed 's/$/")}".toString()/'
                cFlags += "-I" + file("main/cpp/Common/").absolutePath +
                        "-I" + file("main/cpp/Algorithm/").absolutePath +
                        "-I" + file("main/cpp/Algorithm//Inexact").absolutePath +
                        "-I" + file("main/cpp/Algorithm//LinearSolvers").absolutePath +
                        "-I" + file("main/cpp/Apps/").absolutePath +
                        "-I" + file("main/cpp/Apps//AmplSolver").absolutePath +
                        "-I" + file("main/cpp/Apps//CUTErInterface").absolutePath +
                        "-I" + file("main/cpp/Interfaces/").absolutePath +
                        "-I" + file("main/cpp/LinAlg/").absolutePath +
                        "-I" + file("main/cpp/LinAlg//TMatrices").absolutePath +
                        "-I" + file("main/cpp/contrib/").absolutePath +
                        "-I" + file("main/cpp/contrib//CGPenalty").absolutePath +
                        "-I" + file("main/cpp/contrib//LinearSolverLoader").absolutePath
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    //adding cpp/include to source dirs
    sourceSets {
        main {
            // generated by executing the following in the C_IPOPT_TEST directory :
            // find app/src/main/cpp/*/ -type d | sed "s|app/src/|res.srcDirs += ['|" | sed "s/$/']/"
            res.srcDirs += ['main/cpp/Common/']
            res.srcDirs += ['main/cpp/Algorithm/']
            res.srcDirs += ['main/cpp/Algorithm//Inexact']
            res.srcDirs += ['main/cpp/Algorithm//LinearSolvers']
            res.srcDirs += ['main/cpp/Apps/']
            res.srcDirs += ['main/cpp/Apps//AmplSolver']
            res.srcDirs += ['main/cpp/Apps//CUTErInterface']
            res.srcDirs += ['main/cpp/Interfaces/']
            res.srcDirs += ['main/cpp/LinAlg/']
            res.srcDirs += ['main/cpp/LinAlg//TMatrices']
            res.srcDirs += ['main/cpp/contrib/']
            res.srcDirs += ['main/cpp/contrib//CGPenalty']
            res.srcDirs += ['main/cpp/contrib//LinearSolverLoader']
        }
    }
}

dependencies {
    //based on http://stackoverflow.com/questions/24357687/how-to-include-so-library-in-android-studio
    compile fileTree(dir: 'libs', include: ['*.jar', '.jar', '.so'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.2.0'
    testCompile 'junit:junit:4.12'
}
